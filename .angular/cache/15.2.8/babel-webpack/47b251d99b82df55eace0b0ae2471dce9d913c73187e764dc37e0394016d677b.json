{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction LoginComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nfunction LoginComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 6);\n  }\n}\nfunction LoginComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 7, 8);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const _r3 = i0.ɵɵreference(1);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSubmit(_r3));\n    });\n    i0.ɵɵelementStart(2, \"div\", 9)(3, \"label\", 10);\n    i0.ɵɵtext(4, \"E-Mail\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 9)(7, \"label\", 12);\n    i0.ɵɵtext(8, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\")(11, \"button\", 14);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \" | \");\n    i0.ɵɵelementStart(14, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_4_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onSwitchMode());\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(1);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"disabled\", !_r3.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.isLoginMode ? \"Login\" : \"Sign Up\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Switch to \", ctx_r2.isLoginMode ? \"Sign Up\" : \"Login\", \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.isLoginMode = true;\n    this.isLoading = false;\n    this.error = null;\n  }\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n  onSubmit(form) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n    /*\r\n        let authObs: Observable<AuthResponseData>;\r\n    \r\n        this.isLoading = true;\r\n    \r\n        if (this.isLoginMode) {\r\n          authObs = this.authService.login(email, password);\r\n        } else {\r\n          authObs = this.authService.signup(email, password);\r\n        }\r\n    \r\n        authObs.subscribe(\r\n          resData => {\r\n            console.log(resData);\r\n            this.isLoading = false;\r\n            this.router.navigate(['/recipes']);\r\n          },\r\n          errorMessage => {\r\n            console.log(errorMessage);\r\n            this.error = errorMessage;\r\n            this.isLoading = false;\r\n          }\r\n        );\r\n    \r\n        form.reset();\r\n      }*/\n  }\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 5,\n  vars: 3,\n  consts: [[1, \"row\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"style\", \"text-align: center;\", 4, \"ngIf\"], [3, \"ngSubmit\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [2, \"text-align\", \"center\"], [3, \"ngSubmit\"], [\"authForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, LoginComponent_div_2_Template, 3, 1, \"div\", 2);\n      i0.ɵɵtemplate(3, LoginComponent_div_3_Template, 1, 0, \"div\", 3);\n      i0.ɵɵtemplate(4, LoginComponent_form_4_Template, 16, 3, \"form\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAGMA,8BAA8C;IACzCA,YAAW;IAAAA,iBAAI;;;;IAAfA,eAAW;IAAXA,kCAAW;;;;;IAEhBA,yBAEM;;;;;;IACNA,kCAA4E;IAAnDA;MAAAA;MAAA;MAAA;MAAA,OAAYA,mCAAkB;IAAA,EAAC;IACtDA,8BAAwB;IACHA,sBAAM;IAAAA,iBAAQ;IACjCA,4BAQE;IACJA,iBAAM;IACNA,8BAAwB;IACAA,wBAAQ;IAAAA,iBAAQ;IACtCA,4BAQE;IACJA,iBAAM;IACNA,4BAAK;IAMDA,aACF;IAAAA,iBAAS;IACTA,oBACA;IAAAA,mCAAuE;IAAvCA;MAAAA;MAAA;MAAA,OAASA,oCAAc;IAAA,EAAC;IACtDA,aACF;IAAAA,iBAAS;;;;;IAPPA,gBAA4B;IAA5BA,qCAA4B;IAE5BA,eACF;IADEA,yEACF;IAGEA,eACF;IADEA,mFACF;;;ACnCV,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAH1B,gBAAW,GAAG,IAAI;IAClB,cAAS,GAAG,KAAK;IACjB,UAAK,GAAW,IAAI;EACiB;EAErCC,YAAY;IACV,IAAI,CAACC,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;EAEAC,QAAQ,CAACC,IAAY;IACnB,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;MACf;;IAEF,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAACD,KAAK;IAC9B,MAAME,QAAQ,GAAGJ,IAAI,CAACG,KAAK,CAACC,QAAQ;IACxC;;;;;;;;;;;;;;;;;;;;;;;;;;EA0BA;;;AA1CaV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT3BhB,8BAAiB;MAEXA,+DAEM;MACNA,+DAEM;MACNA,kEAsCO;MACTA,iBAAM;;;MA7C6BA,eAAW;MAAXA,gCAAW;MAGtCA,eAAe;MAAfA,oCAAe;MAGqCA,eAAgB;MAAhBA,qCAAgB","names":["i0","LoginComponent","constructor","router","onSwitchMode","isLoginMode","onSubmit","form","valid","email","value","password","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\loren\\Music\\frontend\\CreditHouseFrontend\\src\\app\\auth\\login\\login.component.html","C:\\Users\\loren\\Music\\frontend\\CreditHouseFrontend\\src\\app\\auth\\login\\login.component.ts"],"sourcesContent":["\n<div class=\"row\">\n    <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n      <div class=\"alert alert-danger\" *ngIf=\"error\">\n        <p>{{ error }}</p>\n      </div>\n      <div *ngIf=\"isLoading\" style=\"text-align: center;\">\n \n      </div>\n      <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\n        <div class=\"form-group\">\n          <label for=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            class=\"form-control\"\n            ngModel\n            name=\"email\"\n            required\n            email\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            class=\"form-control\"\n            ngModel\n            name=\"password\"\n            required\n            minlength=\"6\"\n          />\n        </div>\n        <div>\n          <button\n            class=\"btn btn-primary\"\n            type=\"submit\"\n            [disabled]=\"!authForm.valid\"\n          >\n            {{ isLoginMode ? 'Login' : 'Sign Up' }}\n          </button>\n          |\n          <button class=\"btn btn-primary\" (click)=\"onSwitchMode()\" type=\"button\">\n            Switch to {{ isLoginMode ? 'Sign Up' : 'Login' }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  isLoginMode = true;\n  isLoading = false;\n  error: string = null;\n  constructor(private router: Router) {}\n  \n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n/*\n    let authObs: Observable<AuthResponseData>;\n\n    this.isLoading = true;\n\n    if (this.isLoginMode) {\n      authObs = this.authService.login(email, password);\n    } else {\n      authObs = this.authService.signup(email, password);\n    }\n\n    authObs.subscribe(\n      resData => {\n        console.log(resData);\n        this.isLoading = false;\n        this.router.navigate(['/recipes']);\n      },\n      errorMessage => {\n        console.log(errorMessage);\n        this.error = errorMessage;\n        this.isLoading = false;\n      }\n    );\n\n    form.reset();\n  }*/\n}\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}